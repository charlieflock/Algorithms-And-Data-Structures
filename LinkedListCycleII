/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null)
            return false;
        ListNode fastRunner = head.next;
        ListNode slowRunner = head;
        
        while(slowRunner != fastRunner){
            if(fastRunner == null || fastRunner.next == null)
                return false;
            slowRunner = slowRunner.next;
            fastRunner = fastRunner.next.next;
       
        }
            
        return true;
        
    }
        
}
