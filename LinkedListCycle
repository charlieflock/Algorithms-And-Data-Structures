/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null)
            return false;
        ListNode slowRunner = head;
        ListNode fastRunner = head.next;
       try{
        
        while(fastRunner != null || fastRunner.next != null){
            if(slowRunner == fastRunner)
                return true;
            else{
                fastRunner = fastRunner.next.next;
                slowRunner = slowRunner.next;
            }
            
        }
       }
        catch(NullPointerException e){
            return false;
        }
        return false;
        
    }
}
