/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     
 

 ListNode() {
            
 }
 *     ListNode(int val) { 
            this.val = val; }
 *     ListNode(int val, ListNode next) { 
            this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        //Dealing with edge cases(single thing in list, or removing the head)
        //If theres only 1 thing
        if(head.next == null && n==1)
            return null;
        ListNode ptr1 = head;
        ListNode ptr2 = head;
        for(int i = 0; i < n ; i++)
            ptr2 = ptr2.next;
        if(ptr2 == null){ //if node to be removed is head node
            head = head.next;
            return head;
        }
        while(ptr2.next != null){
            ptr1 = ptr1.next;
            ptr2 = ptr2.next;
        }
        ptr1.next = ptr1.next.next;
        return head;
    }
}
